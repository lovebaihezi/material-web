//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use '../../elevation/elevation';
@use '../../focus/focus-ring';
@use '../../ripple/ripple';
@use '../../sass/string-ext';
@use '../../sass/theme';
@use '../../tokens';
// go/keep-sorted end

// note, tab tokens are prefixed by variant name and selectable via
// variant="primary|secondary"
$primary-prefix: 'primary-tab';
$secondary-prefix: 'secondary-tab';
$primary-tokens: theme.create-theme-vars(
  tokens.md-comp-primary-navigation-tab-values(),
  $primary-prefix
);
$secondary-tokens: theme.create-theme-vars(
  tokens.md-comp-secondary-navigation-tab-values(),
  $secondary-prefix
);

@mixin theme($tokens) {
  $reference: map.merge($primary-tokens, $secondary-tokens);
  $tokens: theme.validate-theme($reference, $tokens);
  $tokens: theme.create-theme-vars($tokens, '');
  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  :host {
    @each $token, $value in $primary-tokens {
      $token: string-ext.trim-prefix(#{$token}, $primary-prefix);
      --_#{$token}: #{$value};
    }

    display: inline-flex;
    outline: none;
    -webkit-tap-highlight-color: transparent;
    vertical-align: middle;

    @include ripple.theme(
      (
        focus-color: var(--_focus-state-layer-color),
        focus-opacity: var(--_focus-state-layer-opacity),
        hover-color: var(--_hover-state-layer-color),
        hover-opacity: var(--_hover-state-layer-opacity),
        pressed-color: var(--_pressed-state-layer-color),
        pressed-opacity: var(--_pressed-state-layer-opacity),
      )
    );

    @include focus-ring.theme(
      (
        shape: 8px,
        offset: -7px,
      )
    );
  }

  $_icon-slot: '::slotted([slot=icon])';

  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    border: none;
    outline: none;
    user-select: none;
    -webkit-appearance: none;
    vertical-align: middle;
    background: transparent;
    text-decoration: none;
    inline-size: 100%;
    position: relative;
    padding: 0;
    margin: 0;
    z-index: 0; // Place content on top of elevation and ripple
    font: var(--_label-text-type);
    background-color: var(--_container-color);
    border-bottom: var(--_divider-thickness) solid var(--_divider-color);
    color: var(--_label-text-color);

    &::-moz-focus-inner {
      padding: 0;
      border: 0;
    }

    & #{$_icon-slot} {
      display: inline-flex;
      position: relative;
      writing-mode: horizontal-tb;
      fill: currentColor;
      color: var(--_icon-color);
      font-size: var(--_icon-size);
      inline-size: var(--_icon-size);
      block-size: var(--_icon-size);
    }

    &:hover {
      color: var(--_hover-label-text-color);
      cursor: pointer;

      & #{$_icon-slot} {
        color: var(--_hover-icon-color);
      }
    }

    &:focus {
      color: var(--_focus-label-text-color);

      & #{$_icon-slot} {
        color: var(--_focus-icon-color);
      }
    }

    &:active {
      color: var(--_pressed-label-text-color);
      outline: none;

      & #{$_icon-slot} {
        color: var(--_pressed-icon-color);
      }
    }

    // TODO (b/261201556) implement disabled styling in beta version.
    &:disabled {
      // background-color: var(--_disabled-container-color);
      // & #{$_icon-slot} {
      //   color: var(--_disabled-icon-color);
      // }
    }

    // TODO (b/261201556) implement hcm in beta version
    // @media (forced-colors: active) {
    //   &::before {
    //     @include dom.transparent-border();
    //   }
    // }
  }

  .button,
  md-ripple {
    border-radius: var(--_container-shape);
  }

  md-elevation,
  md-ripple {
    z-index: -1; // Place behind content
  }

  md-elevation,
  .outline {
    position: absolute;
    inset: 0;
  }

  .touch {
    position: absolute;
    top: 50%;
    height: 48px;
    left: 0;
    right: 0;
    transform: translateY(-50%);
  }

  .content {
    position: relative;
    box-sizing: border-box;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    // TODO (b/261201556) replace with spacing token
    $_content-padding: 8px;
    $_content-gap: 4px;
    // tabs are naturally sized up to their max height.
    max-block-size: calc(var(--_container-height) + 2 * $_content-padding);
    padding: $_content-padding;
    gap: $_content-gap;

    inline-size: auto;
  }

  .content.inlineIcon {
    flex-direction: row;
  }

  .indicator {
    position: absolute;
    box-sizing: border-box;
    z-index: -1;
    transform-origin: top left;

    background: var(--_active-indicator-color);
    border-radius: var(--_active-indicator-shape);
    block-size: var(--_active-indicator-height);
    min-inline-size: auto;
    inset: auto 0 0 0;
  }

  :host([selected]) {
    & .button {
      color: var(--_active-label-text-color);
      & #{$_icon-slot} {
        color: var(--_active-icon-color);
      }

      &:hover {
        color: var(--_active-hover-label-text-color);

        & #{$_icon-slot} {
          color: var(--_active-hover-icon-color);
        }
      }

      &:focus {
        color: var(--_active-focus-label-text-color);

        & #{$_icon-slot} {
          color: var(--_active-focus-icon-color);
        }
      }

      &:active {
        color: var(--_active-pressed-label-text-color);

        & #{$_icon-slot} {
          color: var(--_active-pressed-icon-color);
        }
      }
    }

    @include elevation.theme(
      (
        level: var(--_container-elevation),
      )
    );

    @include ripple.theme(
      (
        focus-color: var(--_active-focus-state-layer-color),
        focus-opacity: var(--_active-focus-state-layer-opacity),
        hover-color: var(--_active-hover-state-layer-color),
        hover-opacity: var(--_active-hover-state-layer-opacity),
        pressed-color: var(--_active-pressed-state-layer-color),
        pressed-opacity: var(--_active-pressed-state-layer-opacity),
      )
    );
  }

  :host([disabled]) {
    cursor: default;
    pointer-events: none;
    // TODO (b/261201556) implement disabled styling in beta version.
    opacity: 0.38;
  }

  // secondary
  :host([variant~='secondary']) {
    @each $token, $value in $secondary-tokens {
      $token: string-ext.trim-prefix($token, $secondary-prefix);
      --_#{$token}: #{$value};
    }

    & .content {
      inline-size: 100%;
    }

    & .indicator {
      min-inline-size: 100%;
    }
  }

  // vertical
  // no tokens for vertical as yet.
  :host([variant~='vertical']) {
    flex: 0;

    & .content {
      inline-size: 100%;
    }

    & .indicator {
      block-size: 100%;
      min-inline-size: var(--_active-indicator-height);
      inset: 0 0 0 auto;
    }
  }

  :host([variant~='vertical'][variant~='primary']) {
    --_active-indicator-shape: 9999px 0 0 9999px;
  }

  :host([variant~='vertical']) .button {
    inline-size: 100%;
    flex-direction: row;
    border-bottom: none;
    border-right: var(--_divider-thickness) solid var(--_divider-color);
  }

  :host,
  ::slotted(*) {
    white-space: nowrap;
  }

  .hidden {
    opacity: 0;
  }

  .showing {
    opacity: 1;
    transform: none;
  }

  // TODO delete or move to other module

  // // navigation variant
  // :host([variant~='navigation']) {
  //   --_active-indicator-shape: 9999px;
  //   --_active-indicator-height: 30px;
  // }

  // :host([variant~='navigation']) .indicator {
  //   transform-origin: center;
  // }

  // // navigation wide variant
  // :host([variant~='navigation'][variant~='wide']) {
  //   --_active-indicator-shape: 9999px;
  //   --_active-indicator-height: auto;
  //   --_container-height: var(--_navigation-wide-container-height);
  // }

  // :host([variant~='navigation'][variant~='wide']) .content {
  //   flex-direction: var(--_navigation-wide-container-direction);
  // }

  // :host([variant~='navigation'][variant~='wide'][variant~='vertical'])
  //   .content {
  //   justify-content: start;
  //   padding-inline: 16px;
  // }

  // :host([variant~='navigation'][variant~='wide'][variant~='vertical']) .label {
  //   flex: 1;
  //   text-align: initial;
  // }

  // :host([variant='none']) {
  //   --_active-indicator-height: 0;
  // }
}
